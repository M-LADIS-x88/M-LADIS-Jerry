// generated from rosidl_adapter/resource/msg.idl.em
// with input from lidar_slam/msg/Confidence.msg
// generated code does not contain a copyright notice

#include "std_msgs/msg/Header.idl"

module lidar_slam {
  module msg {
    typedef double double__36[36];
    @verbatim (language="comment", text=
      "The covariance in this message should be specified in the coordinate frame given by header.frame_id.")
    struct Confidence {
      @verbatim (language="comment", text=
        "See \"std_msgs/Header.msg\"")
      std_msgs::msg::Header header;

      @verbatim (language="comment", text=
        "Row-major representation of the 6x6 covariance matrix of ICP pose estimation." "\n"
        "In order, the pose elements are:" "\n"
        "(x, y, z, rotation angle about X axis, rotation angle about Y axis, rotation angle about Z axis)" "\n"
        "Rotation is computed as Rz*Ry*Rx")
      double__36 covariance;

      @verbatim (language="comment", text=
        "Overlap estimation" "\n"
        "It is contained in [0, 1]" "\n"
        "Good values are greater than 0.6" "\n"
        "Bad values are lower than 0.4" "\n"
        "Jumps in this value can reflect pose estimation failure")
      float overlap;

      @verbatim (language="comment", text=
        "Number of matches between extracted keypoints" "\n"
        "and current keypoint maps" "\n"
        "Good values are greater than 200" "\n"
        "Bad values are lower than 50")
      int16 nb_matches;

      @verbatim (language="comment", text=
        "This value indicates if the estimated pose" "\n"
        "respects the specified physical constraints on velocity and acceleration")
      boolean comply_motion_limits;

      @verbatim (language="comment", text=
        "Standard deviation of the position error based on the pose" "\n"
        "covariance supplied by the SLAM algorithm")
      float std_position_error;

      @verbatim (language="comment", text=
        "Boolean based on the fusion of the previous estimators" "\n"
        "to indicate whether or not the SLAM has failed")
      boolean failure;

      @verbatim (language="comment", text=
        "This value indicates the computation time from data reception to pose output")
      float computation_time;
    };
  };
};
